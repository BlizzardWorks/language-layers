[[https://waffle.io/StevenTammen/unicode-language-layers][https://badge.waffle.io/StevenTammen/unicode-language-layers.svg?columns=all]]

* About this project

This project will seek to create efficient, stable, and easy-to-modify keyboard layouts for Polytonic Greek and vowel-pointed Hebrew. This endeavor is being sponsored by the University of Georgia's Center for Undergraduate Research Opportunities (CURO) through a summer fellowship. (Thanks CURO!).

A research paper detailing the design process will be a priority of this project in addition to software that creates the layouts themselves.

* Scope and project goals

Depending on time considerations, this project may have shifting goals and priorities. The top priority will be getting functional homophonic layouts with full diacritical support. Other things, such as frequency-driven practice corpuses for typing programs, a GUI configurator, OS X and *nix support, and packaged installers are possibilities after the primary layouts are stable.

* Installation and use (note: this project is currently Windows-only)

1. [[https://autohotkey.com/download/][Download AutoHotkey]] from it's site, and install it.
2. [[https://github.com/StevenTammen/unicode-language-layers/archive/master.zip][Download this project as a .ZIP archive]], and then unzip it into a convenient location.
3. Double click on the file called =greek.ahk= to execute the remapping script. The script can be closed from the system tray when you no longer wish to type Greek. (A more elegant combined English/Greek implementation is in the pipeline -- soon there will be a single script executed that lets you toggle back and forth between multiple languages).

* Contribution guidelines

I would very much like for this project to be a group effort from the collection of people that regularly need to type in languages with specialized alphabets. Due to my academic interests, I will initially be focusing on ancient Greek and Hebrew, but I am attempting to design a generalized framework abstracted out of any one particular language, and discuss design variables in such a way that layers for additional Unicode languages (such as Russian, Arabic, etc.) may be added even if they do not share exactly the same features (such as breathing marks or vowel points).

People of all levels of technical knowledge are welcome and encouraged to open issues/bug-reports, create feature requests, and make suggestions. For the more technically inclined that would like to contribute to development directly:

1. [[https://autohotkey.com/download/][Download AutoHotkey]] from it's site, and install it.
2. Install a capable text-editor with Unicode support. [[https://notepad-plus-plus.org/][Notepad++]] is a good option, provided you ensure that you save Autohotkey files in the UTF8-BOM encoding. (You /must/ do this for Unicode to be supported directly in the code).
3. Clone the repository and its dependencies: =git clone --recursive https://github.com/StevenTammen/unicode-language-layers.git=.
4. =cd= into the project and start looking through the files and [[https://waffle.io/StevenTammen/unicode-language-layers][open issues]] to see where you can contribute.

The project is still pretty alpha (meaning inline comments are fairly minimal and there is no stable API), but I am nearing the point where I will start to finalize things and provide better documentation. Eventually there will be a full API and examples regarding language specific implementation concerns.

Also be warned that I may continue to force push freely for the next couple weeks.


